// <auto-generated />
using System;
using System.Numerics;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using monitKars.Data;

#nullable disable

namespace monitKars.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("monitKars.Entities.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarID"));

                    b.Property<string>("CarColor")
                        .HasColumnType("text");

                    b.Property<string>("CarEngine")
                        .HasColumnType("text");

                    b.Property<string>("CarInsurance")
                        .HasColumnType("text");

                    b.Property<string>("CarMaintenanceStatus")
                        .HasColumnType("text");

                    b.Property<string>("CarManufacturer")
                        .HasColumnType("text");

                    b.Property<string>("CarMilage")
                        .HasColumnType("text");

                    b.Property<string>("CarModel")
                        .HasColumnType("text");

                    b.Property<string>("CarName")
                        .HasColumnType("text");

                    b.Property<string>("CarOil")
                        .HasColumnType("text");

                    b.Property<string>("CarOrganisation")
                        .HasColumnType("text");

                    b.Property<string>("CarOwnerID")
                        .HasColumnType("text");

                    b.Property<string>("CarPeriodicRevision")
                        .HasColumnType("text");

                    b.Property<string>("CarPlateNumber")
                        .HasColumnType("text");

                    b.Property<string[]>("CarTireSizes")
                        .HasColumnType("text[]");

                    b.Property<string>("CarType")
                        .HasColumnType("text");

                    b.Property<string>("CarVignette")
                        .HasColumnType("text");

                    b.Property<string>("CarVinNumber")
                        .HasColumnType("text");

                    b.Property<int?>("CarYear")
                        .HasColumnType("integer");

                    b.HasKey("CarID");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("monitKars.Entities.Organisation", b =>
                {
                    b.Property<int>("OrganisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrganisationID"));

                    b.Property<int?>("NumberOfCars")
                        .HasColumnType("integer");

                    b.Property<int?>("NumberOfDrivers")
                        .HasColumnType("integer");

                    b.Property<string>("OrganisationAddress")
                        .HasColumnType("text");

                    b.Property<string>("OrganisationMail")
                        .HasColumnType("text");

                    b.Property<string>("OrganisationName")
                        .HasColumnType("text");

                    b.Property<string>("OrganisationPhone")
                        .HasColumnType("text");

                    b.HasKey("OrganisationID");

                    b.ToTable("Organisation", (string)null);
                });

            modelBuilder.Entity("monitKars.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<BigInteger?>("Created_timestamp")
                        .HasColumnType("numeric");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Email_constraint")
                        .HasColumnType("text");

                    b.Property<string>("Email_verified")
                        .HasColumnType("text");

                    b.Property<bool?>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Federation_link")
                        .HasColumnType("text");

                    b.Property<string>("First_name")
                        .HasColumnType("text");

                    b.Property<string>("Last_name")
                        .HasColumnType("text");

                    b.Property<string>("Not_before")
                        .HasColumnType("text");

                    b.Property<string>("Realm_Id")
                        .HasColumnType("text");

                    b.Property<string>("Service_account_client_link")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
