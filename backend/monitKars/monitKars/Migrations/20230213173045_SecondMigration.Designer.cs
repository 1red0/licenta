// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using monitKars.Data;

#nullable disable

namespace monitKars.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230213173045_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("monitKars.Entities.Car", b =>
                {
                    b.Property<int>("carID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("carID"));

                    b.Property<string>("carName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("insurance")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("maintenanceStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("manufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("milage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("oil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ownerID")
                        .HasColumnType("integer");

                    b.Property<string>("periodicRevision")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("plateNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("tireSizes")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vignette")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("vinNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("carID");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("monitKars.Entities.Organisation", b =>
                {
                    b.Property<int>("organisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("organisationID"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("numberOfCars")
                        .HasColumnType("integer");

                    b.Property<int>("numberOfDrivers")
                        .HasColumnType("integer");

                    b.HasKey("organisationID");

                    b.ToTable("Organisation", (string)null);
                });

            modelBuilder.Entity("monitKars.Entities.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userID"));

                    b.Property<int>("carID")
                        .HasColumnType("integer");

                    b.Property<string>("dateOfBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("organisationID")
                        .HasColumnType("integer");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("userID");

                    b.ToTable("User", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
